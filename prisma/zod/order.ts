import * as z from "zod"
import * as imports from "../../src/translations"
import { CompleteProduct, relatedProductSchema, CompleteSupplier, relatedSupplierSchema } from "./index"

export const orderSchema = z.object({
  /**
   * The unique identifier for the supplier
   * @default {Generated by database}
   */
  id: z.string(),
  orderNumber: z.number().int(),
  supplierId: z.string(),
  s3Key: z.string(),
  createdAt: z.date(),
  updatedAt: z.date(),
})

export interface CompleteOrder extends z.infer<typeof orderSchema> {
  products: CompleteProduct[]
  supplier: CompleteSupplier
}

/**
 * relatedOrderSchema contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const relatedOrderSchema: z.ZodSchema<CompleteOrder> = z.lazy(() => orderSchema.extend({
  products: relatedProductSchema.array(),
  supplier: relatedSupplierSchema,
}))
