import '../styles/globals.css';
import type { AppType } from 'next/dist/shared/lib/utils';
import { SessionProvider } from 'next-auth/react';
import { Toaster } from 'react-hot-toast';
import {
	QueryClientProvider,
	useIsMutating,
} from '@tanstack/react-query';
import Head from 'next/head';
import { queryClient, trpc, trpcClient } from '../utils/trpc';

export const Providers = ({
	session,
	children,
}: {
	session: any;
	children: any;
}) => {
	return (
		<trpc.Provider queryClient={queryClient} client={trpcClient}>
			<QueryClientProvider client={queryClient}>
				<SessionProvider session={session}>
					{children}
				</SessionProvider>
			</QueryClientProvider>
		</trpc.Provider>
	);
};

export const Spinner = () => {
	const isMutating = useIsMutating();

	if (!isMutating) return null;

	return (
		<svg
			xmlns='http://www.w3.org/2000/svg'
			fill='none'
			viewBox='0 0 24 24'
			strokeWidth={1.5}
			stroke='currentColor'
			className='w-6 h-6 animate-spin absolute bottom-5 left-5'
		>
			<path
				strokeLinecap='round'
				strokeLinejoin='round'
				d='M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99'
			/>
		</svg>
	);
};

const MyApp: AppType = ({ Component, pageProps }) => {
	return (
		<Providers session={pageProps.session}>
			<Head>
				<title>Danon Ordering System</title>
				<meta
					name='description'
					content='Generated by create-t3-app'
				/>
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<Toaster
				position='top-center'
				toastOptions={{
					duration: 3000,
				}}
			/>
			<main className='container pt-[7vh] min-h-screen p-2 mx-auto relative'>
				<Spinner />
				<Component {...pageProps} />
			</main>
		</Providers>
	);
};

export default MyApp;
